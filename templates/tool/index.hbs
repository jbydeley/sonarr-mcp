import { z } from "zod";
import { CallToolResult } from "@modelcontextprotocol/sdk/types.js";
import { SonarrHttpClient } from "@/common/sonarr.http-client.js";

export const {{ camelCase name }}Schema = z.object({});

export type {{ properCase name }}Dto = z.infer<typeof {{ camelCase name }}Schema>;

export const {{ camelCase name }}ToolName = "{{ kebabCase name }}";
export const {{ camelCase name }}ToolDescription = "{{ sentenceCase description }}";

export const {{ camelCase name }}ToolHandler = async (
  data: {{ properCase name }}Dto
): Promise<CallToolResult> => {
		const sonarrHttpClient = new SonarrHttpClient();

		return {
		content: [
			{
				type: "text",
				text: JSON.stringify(data),
			},
		],
	};
};